[{"C:\\projects\\sandbox\\lib\\src\\index.js":"1","C:\\projects\\sandbox\\lib\\src\\reportWebVitals.js":"2","C:\\projects\\sandbox\\lib\\src\\App.js":"3","C:\\projects\\sandbox\\lib\\src\\store.js":"4","C:\\projects\\sandbox\\lib\\src\\server.js":"5","C:\\projects\\sandbox\\lib\\src\\game.js":"6","C:\\projects\\sandbox\\lib\\src\\player.js":"7"},{"size":657,"mtime":1610557778754,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3671,"mtime":1610637234838,"results":"11","hashOfConfig":"9"},{"size":3810,"mtime":1611073732011,"results":"12","hashOfConfig":"9"},{"size":643,"mtime":1610370772347,"results":"13","hashOfConfig":"9"},{"size":1881,"mtime":1610370789116,"results":"14","hashOfConfig":"9"},{"size":8785,"mtime":1610370752781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"gcdips",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\projects\\sandbox\\lib\\src\\index.js",[],["33","34"],"C:\\projects\\sandbox\\lib\\src\\reportWebVitals.js",[],"C:\\projects\\sandbox\\lib\\src\\App.js",["35","36","37","38"],"import './App.css';\nimport classNames from 'classnames';\nimport { useEffect, useState, Fragment } from 'react';\nimport { useSelector, useDispatch, } from 'react-redux';\nimport { start, start1, move, move1, sendMessage } from './store';\n\nfunction Cell({ row, column, index }) {\n  let field = useSelector(state => state.game.fields[index]);\n  let nextPlayer = useSelector(state => state.game.nextPlayer);\n  let player = useSelector(state => state.game.player);\n  let name = useSelector(state => state.game.name);\n  let prevMove = useSelector(state => state.game.prevMove[index]);\n  let cell = field[row][column];\n\n  let className = classNames('cell', 'cell-index-' + row + '-' + column, {\n    'cell-ship': index === 0 && cell.type === 'O',\n    'cell-border': cell.type === 'B',\n    'cell-missed': cell.type === 'X',\n    'cell-injured': cell.type === 'I',\n    'cell-killed': cell.type === 'K',\n    'cell-next-move': row === prevMove.x && column === prevMove.y && cell.type !== 'K',\n  });\n\n  let dispatch = useDispatch();\n\n  return (\n    <div className={className} onClick={() => {\n      if (nextPlayer === player && index === 1) {\n        dispatch(move1({ x: cell.x, y: cell.y, player: player, name: name }));\n      }\n    }}></div>\n  );\n}\n\nfunction Bot() {\n  let nextMove = useSelector(state => state.game.nextMove[0]);\n  let nextPlayer = useSelector(state => state.game.nextPlayer);\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (!!nextMove && nextPlayer === 0) {\n        dispatch(move1({ x: nextMove.x, y: nextMove.y, fieldIndex: 0 }));\n        // dispatch(sendMessage({ user: 'mrx', message: new Date().toISOString() }));\n      }\n    }, 500);\n    return () => clearInterval(interval);\n  }, [dispatch, nextMove, nextPlayer]);\n\n  return (<Fragment></Fragment>);\n}\n\nfunction Row({ index, children }) {\n  let className = classNames('row', 'row-index-' + index);\n\n  return (\n    <div className={className}>{children}</div>\n  );\n}\n\nfunction Info() {\n  let nextPlayer = useSelector(state => state.game.nextPlayer);\n  let player = useSelector(state => state.game.player);\n  let status = useSelector(state => state.game.status);\n\n  return (\n    <Fragment>\n      {status === -1 && nextPlayer === player && <Row><span>Your turn</span></Row>}\n      {status === -1 && nextPlayer !== player && <Row><span>Opponent turn</span></Row>}\n      {status === 0 && (<span>You lose</span>)}\n      {status === 1 && (<span>You win</span>)}\n    </Fragment>\n  );\n}\n\nfunction Field({ index }) {\n  let rows = [];\n\n  let className = classNames('field', {\n    'field-self': index === 0,\n    'field-enemy': index === 1,\n  });\n\n  for (let i = 0; i < 10; i++) {\n    let cells = [];\n    for (let j = 0; j < 10; j++) {\n      cells.push(<Cell key={i * 10 + j} row={i} column={j} index={index}></Cell>);\n    }\n    rows.push(<Row key={i} index={i}>{cells}</Row>);\n  }\n\n  return (\n    <div className={className}>\n      {rows}\n    </div>\n  );\n}\n\nfunction Game() {\n  return (\n    <Fragment>\n      <Row>\n        <Info></Info>\n      </Row>\n      <Field index={0}></Field>\n      <Field index={1}></Field>\n      {/* <Bot></Bot> */}\n    </Fragment>\n  );\n}\n\nfunction App() {\n  let dispatch = useDispatch();\n  let status = useSelector(state => state.game.status);\n\n  let [name, setName] = useState('qwerty')\n\n  return (\n    <div className='game'>\n      {status >= -1 && (<Fragment><Game></Game><Row></Row></Fragment>)}\n      {status !== -1 && (<Row>\n        <input type='text' onChange={e => setName(e.target.value)} value={name}></input>\n        <button onClick={() => dispatch(start1(name))}>New game</button>\n      </Row>)}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\projects\\sandbox\\lib\\src\\store.js",[],"C:\\projects\\sandbox\\lib\\src\\server.js",[],"C:\\projects\\sandbox\\lib\\src\\game.js",[],"C:\\projects\\sandbox\\lib\\src\\player.js",[],["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":5,"column":25,"nodeType":"47","messageId":"48","endLine":5,"endColumn":29},{"ruleId":"45","severity":1,"message":"50","line":5,"column":38,"nodeType":"47","messageId":"48","endLine":5,"endColumn":49},{"ruleId":"45","severity":1,"message":"51","line":35,"column":10,"nodeType":"47","messageId":"48","endLine":35,"endColumn":13},{"ruleId":"41","replacedBy":"52"},{"ruleId":"43","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'start' is defined but never used.","Identifier","unusedVar","'move' is defined but never used.","'sendMessage' is defined but never used.","'Bot' is defined but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]